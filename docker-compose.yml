version: "3.1"

services:
  server:
    build:
      context: .
      dockerfile: Dockerfile
      target: server-builder
    networks:
      - node_network
    depends_on:
      - mongo
    environment:
      URI: "mongodb://root:example@mongo:27017"
      PORT: 4000
    ports:
      - 4000:4000
    tty: true
    # volumes:
    #   - .:/app
    # command: /usr/local/wait-for-it.sh mongosh:27017 -- npm run dev

  client:
    build:
      context: .
      dockerfile: Dockerfile
      target: client-builder
    # entrypoint: /bin/sh //Not interested to run manually within container
    networks:
      - node_network
    ports:
      - 5173:5173
    tty: true
    environment:
      VITEDOCKER: "Hola Docker"
    volumes:
      - type: bind
        source: ./
        target: /srv/app
  mongo:
    image: mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    volumes:
      - "./Server/data/mongodb:/data/db"
    ports:
      - 27017:27017
    networks:
      - node_network

networks:
  node_network:
# nicolaka/netshoot: Let us inspect another container in the same network and get pretty sensitive data from it (ip, etc)
# docker run -it --network chat-server_node_network nicolaka/netshoot
# dig mongo
